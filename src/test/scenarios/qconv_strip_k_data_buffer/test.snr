---
- MARCHAL : 
  - SAY : QCONV_STRIP_IN_DATA_BUFFER_TEST 1 K=>1x1
---
- MARCHAL : 
  - SAY : QCONV_STRIP_IN_DATA_BUFFER_TEST 1.00 IN_C=1 IN_W=1 IN_H=1 OUT_C=1
- CSR :
  - WRITE: {ADDR: "32'h00000040", DATA: "32'h00000001"} # IN_W
  - WRITE: {ADDR: "32'h00000048", DATA: "32'h00000001"} # IN_H
  - WRITE: {ADDR: "32'h00000050", DATA: "32'h00000001"} # IN_C
  - WRITE: {ADDR: "32'h00000058", DATA: "32'h00000001"} # OUT_W
  - WRITE: {ADDR: "32'h00000060", DATA: "32'h00000001"} # OUT_H
  - WRITE: {ADDR: "32'h00000068", DATA: "32'h00000001"} # OUT_C
  - WRITE: {ADDR: "32'h00000070", DATA: "32'h00000001"} # K_W
  - WRITE: {ADDR: "32'h00000078", DATA: "32'h00000001"} # K_H
  - WRITE: {ADDR: "32'h00000080", DATA: "32'h00000000"} # PAD_SIZE
  - WRITE: {ADDR: "32'h00000010", DATA: "32'h00000001"} # IRQE[0]<=1
  - WRITE: {ADDR: "32'h00000008", DATA: "32'h00000001"} # CTRL[0]<=1
  - READ : {ADDR: "32'h00000000", DATA: "32'h00000001"} # BUSY[0]==1
  - WAIT : {GPI(0) : 1, TIMEOUT: 10000}                 # WAIT for IRQ=1
  - READ : {ADDR: "32'h00000018", DATA: "32'h00000003"} # STAT[0]==1 STAT[1]==1
  - WRITE: {ADDR: "32'h00000018", DATA: "32'h00000001"} # STAT[0]<=1
  - WAIT : {GPI(0) : 0, TIMEOUT: 10000}                 # WAIT for IRQ=0
  - READ : {ADDR: "32'h00000018", DATA: "32'h00000002"} # STAT[0]==0 STAT[1]==1
- I :
  - XFER : {DATA : ["32'h00FF55AA"]}
- O :
  - READY: 1
  - WAIT : {VALID: 1}
  - CHECK: {ELEM : [[[["32'h00FF55AA", 
                       "32'h--------",
                       "32'h--------",
                       "32'h--------",
                       "32'h--------",
                       "32'h--------",
                       "32'h--------",
                       "32'h--------",
                       "32'h--------"]]]],
            ATRB : {C: [3,0,0,0,0,0,0,0,4], D: [7], X: [7], Y: [7]}}
  - READY: 0
---
- MARCHAL : 
  - SAY : QCONV_STRIP_IN_DATA_BUFFER_TEST 1 DONE
---
- MARCHAL : 
  - SAY : QCONV_STRIP_IN_DATA_BUFFER_TEST 2 K=>3x3
---
- MARCHAL : 
  - SAY : QCONV_STRIP_IN_DATA_BUFFER_TEST 2.00 IN_C=1 IN_W=1 IN_H=1 OUT_C=1
- CSR :
  - WRITE: {ADDR: "32'h00000040", DATA: "32'h00000001"} # IN_W
  - WRITE: {ADDR: "32'h00000048", DATA: "32'h00000001"} # IN_H
  - WRITE: {ADDR: "32'h00000050", DATA: "32'h00000001"} # IN_C
  - WRITE: {ADDR: "32'h00000058", DATA: "32'h00000001"} # OUT_W
  - WRITE: {ADDR: "32'h00000060", DATA: "32'h00000001"} # OUT_H
  - WRITE: {ADDR: "32'h00000068", DATA: "32'h00000001"} # OUT_C
  - WRITE: {ADDR: "32'h00000070", DATA: "32'h00000003"} # K_W
  - WRITE: {ADDR: "32'h00000078", DATA: "32'h00000003"} # K_H
  - WRITE: {ADDR: "32'h00000080", DATA: "32'h00000001"} # PAD_SIZE
  - WRITE: {ADDR: "32'h00000010", DATA: "32'h00000001"} # IRQE[0]<=1
  - WRITE: {ADDR: "32'h00000008", DATA: "32'h00000001"} # CTRL[0]<=1
  - READ : {ADDR: "32'h00000000", DATA: "32'h00000001"} # BUSY[0]==1
  - WAIT : {GPI(0) : 1, TIMEOUT: 10000}                 # WAIT for IRQ=1
  - READ : {ADDR: "32'h00000018", DATA: "32'h00000003"} # STAT[0]==1 STAT[1]==1
  - WRITE: {ADDR: "32'h00000018", DATA: "32'h00000001"} # STAT[0]<=1
  - WAIT : {GPI(0) : 0, TIMEOUT: 10000}                 # WAIT for IRQ=0
  - READ : {ADDR: "32'h00000018", DATA: "32'h00000002"} # STAT[0]==0 STAT[1]==1
- I :
  - XFER : {DATA : ["32'h00010001"]}
  - XFER : {DATA : ["32'h00010002"]}
  - XFER : {DATA : ["32'h00010003"]}
  - XFER : {DATA : ["32'h00020001"]}
  - XFER : {DATA : ["32'h00020002"]}
  - XFER : {DATA : ["32'h00020003"]}
  - XFER : {DATA : ["32'h00030001"]}
  - XFER : {DATA : ["32'h00030002"]}
  - XFER : {DATA : ["32'h00030003"]}
- O :
  - READY: 1
  - WAIT : {VALID: 1}
  - CHECK: {ELEM : [[[["32'h00010001",
                       "32'h00010002",
                       "32'h00010003",
                       "32'h00020001",
                       "32'h00020002",
                       "32'h00020003",
                       "32'h00030001",
                       "32'h00030002",
                       "32'h00030003"]]]],
            ATRB : {C: [3,1,1,1,1,1,1,1,5], D: [7], X: [7], Y: [7]}}
  - READY: 0
---
- MARCHAL : 
  - SAY : QCONV_STRIP_IN_DATA_BUFFER_TEST 2 DONE
---
